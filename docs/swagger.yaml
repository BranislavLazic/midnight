definitions:
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.ServiceRequest:
    properties:
      checkIntervalSeconds:
        maximum: 1000000
        type: integer
      name:
        maxLength: 255
        type: string
      url:
        maxLength: 4096
        type: string
    required:
    - checkIntervalSeconds
    - url
    type: object
info:
  contact: {}
paths:
  /v1/login:
    post:
      parameters:
      - description: Login request body
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      summary: Login
  /v1/logout:
    post:
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Logout
  /v1/services:
    get:
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Get all services
    post:
      parameters:
      - description: Service request body
        in: body
        name: serviceRequest
        required: true
        schema:
          $ref: '#/definitions/model.ServiceRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      summary: Create a service
  /v1/services/{id}:
    delete:
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Delete a service
    get:
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Get a service by id
    post:
      parameters:
      - description: Service request body
        in: body
        name: serviceRequest
        required: true
        schema:
          $ref: '#/definitions/model.ServiceRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      summary: Update a service
  /v1/status:
    get:
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Get status
swagger: "2.0"
